{"version":3,"sources":["webpack:///./src/assets/styles/index.scss?eec7","webpack:///./src/assets/styles/index.scss","webpack:///./src/actions.js","webpack:///./src/assets/icons/index.js","webpack:///./src/view.js","webpack:///./src/model.js","webpack:///./src/app.js","webpack:///./src/index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","locals","exports","push","createActions","update","library","add","faUtensils","iconUtensils","utensils","icon","classes","node","createView","actions","model","html","_templateObject","stringify_default","initModel","description","calories","showForm","nextId","editId","meals","app","view","flyd","stream","counter","models","scan","func","document","getElementById","map","render"],"mappings":";4EACA,IAAAA,EAAcC,EAAQ,IAEtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaP,EAAQ,GAARA,CAA8DD,EAAAI,GAE3EJ,EAAAS,SAAAP,EAAAQ,QAAAV,EAAAS,6BCjBAP,EAAAQ,QAA2BT,EAAQ,GAARA,EAA8D,IAEzFU,KAAA,CAAcT,EAAAC,EAAS,2ECCRS,EAFO,SAAAC,GAAM,MAAK,0fCGjCC,IAAQC,IAAIC,SCCMC,EDCH,CACbC,SAAUC,YAAKH,IAAY,CAAEI,QAAS,CAAC,WAAYC,MCF7CH,SAoBOI,EAjBI,SAAAC,GAAO,OAAI,SAAAC,GAAK,OAAIC,YAAJC,IAMLT,EAGXU,IAAeH,EAAO,KAAM,MCRhCI,EATG,CAChBC,YAAa,YACbC,SAAU,IACVC,UAAU,EACVC,OAAQ,EACRC,OAAQ,KACRC,MAAO,ICIMC,EANH,SAAAtB,GAAM,MAAK,CACrBW,MAAO,kBAAMI,GAEbQ,KAAMd,EAAWV,EAAcC,MCF3BA,EAASwB,IAAKC,SACdC,EAAUJ,EAAItB,GACd2B,EAASH,IAAKI,KAAK,SAACjB,EAAOkB,GAAR,OAAiBA,EAAKlB,IAAQe,EAAQf,QAASX,GAElEQ,EAAOsB,SAASC,eAAe,OACrCJ,EAAOK,IAAI,SAAArB,GAAK,OAAIsB,YAAOP,EAAQH,KAAKZ,GAAQH","file":"main.637d.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n\n","// eslint-disable-next-line no-unused-vars\nconst createActions = update => ({});\n\nexport default createActions;\n","import { icon, library } from '@fortawesome/fontawesome-svg-core';\n\nimport { faUtensils } from '@fortawesome/pro-regular-svg-icons';\n\nlibrary.add(faUtensils);\n\nexport default {\n  utensils: icon(faUtensils, { classes: ['fa-fw'] }).node,\n};\n","import { html } from 'lit-html';\n\nimport './assets/styles/index.scss';\nimport icons from './assets/icons';\n\nconst { utensils: iconUtensils } = icons;\n\n// eslint-disable-next-line no-unused-vars\nconst createView = actions => model => html`\n  <section class=\"hero is-light is-fullheight\">\n    <div class=\"hero-body\">\n      <div class=\"container\">\n        <div class=\"column is-4 is-offset-4\">\n          <h3 class=\"title has-text-grey\">\n            Calorie Counter ${iconUtensils}\n          </h3>\n          <div class=\"box\">\n            <pre>${JSON.stringify(model, null, 2)}</pre>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n`;\n\nexport default createView;\n","const initModel = {\n  description: 'Breakfast',\n  calories: 480,\n  showForm: false,\n  nextId: 0,\n  editId: null,\n  meals: [],\n};\n\nexport default initModel;\n","import createActions from './actions';\nimport createView from './view';\nimport initModel from './model';\n\nconst app = update => ({\n  model: () => initModel,\n\n  view: createView(createActions(update)),\n});\n\nexport default app;\n","import flyd from 'flyd';\nimport { render } from 'lit-html';\n\nimport app from './app';\n\nconst update = flyd.stream();\nconst counter = app(update);\nconst models = flyd.scan((model, func) => func(model), counter.model(), update);\n\nconst node = document.getElementById('app');\nmodels.map(model => render(counter.view(model), node));\n"],"sourceRoot":""}