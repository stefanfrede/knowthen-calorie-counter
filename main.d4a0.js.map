{"version":3,"sources":["webpack:///./src/actions.js","webpack:///./src/view.js","webpack:///./src/model.js","webpack:///./src/app.js","webpack:///./src/index.js"],"names":["createActions","update","createView","actions","model","html","_templateObject","stringify_default","initModel","description","calories","showForm","nextId","editId","meals","app","view","flyd","stream","counter","models","scan","func","node","document","getElementById","map","render"],"mappings":";2HAGeA,EAFO,SAAAC,GAAM,MAAK,oKCEjC,IAMeC,EANI,SAAAC,GAAO,OAAI,SAAAC,GAAK,OAAIC,YAAJC,IAExBC,IAAeH,EAAO,KAAM,MCIxBI,EATG,CAChBC,YAAa,YACbC,SAAU,IACVC,UAAU,EACVC,OAAQ,EACRC,OAAQ,KACRC,MAAO,ICIMC,EANH,SAAAd,GAAM,MAAK,CACrBG,MAAO,kBAAMI,GAEbQ,KAAMd,EAAWF,EAAcC,MCF3BA,EAASgB,IAAKC,SACdC,EAAUJ,EAAId,GACdmB,EAASH,IAAKI,KAAK,SAACjB,EAAOkB,GAAR,OAAiBA,EAAKlB,IAAQe,EAAQf,QAASH,GAElEsB,EAAOC,SAASC,eAAe,OACrCL,EAAOM,IAAI,SAAAtB,GAAK,OAAIuB,YAAOR,EAAQH,KAAKZ,GAAQmB","file":"main.d4a0.js","sourcesContent":["// eslint-disable-next-line no-unused-vars\nconst createActions = update => ({});\n\nexport default createActions;\n","import { html } from 'lit-html';\n\n// eslint-disable-next-line no-unused-vars\nconst createView = actions => model => html`\n  <div class=\"calorie-counter\">\n    <pre>${JSON.stringify(model, null, 2)}</pre>\n  </div>\n`;\n\nexport default createView;\n","const initModel = {\n  description: 'Breakfast',\n  calories: 480,\n  showForm: false,\n  nextId: 0,\n  editId: null,\n  meals: [],\n};\n\nexport default initModel;\n","import createActions from './actions';\nimport createView from './view';\nimport initModel from './model';\n\nconst app = update => ({\n  model: () => initModel,\n\n  view: createView(createActions(update)),\n});\n\nexport default app;\n","import flyd from 'flyd';\nimport { render } from 'lit-html';\n\nimport app from './app';\n\nconst update = flyd.stream();\nconst counter = app(update);\nconst models = flyd.scan((model, func) => func(model), counter.model(), update);\n\nconst node = document.getElementById('app');\nmodels.map(model => render(counter.view(model), node));\n"],"sourceRoot":""}